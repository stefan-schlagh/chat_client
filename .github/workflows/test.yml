# This is a basic workflow to help you get started with Actions

name: Test

on:
  pull_request:
  
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
        required: false

jobs:
  test:
    name: test App
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # chat client repository is checked out
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: chat_client
      # node.js setup
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      # install dependencies
      - name: npm install
        run: |
          cd ./chat_client
          npm ci
      # test
      - name: npm test
        run: |
          cd ./chat_client
          npm test
      # test build
      - name: npm test build
        run: |
          cd ./chat_client
          npm run build
  e2eTest:
    name: e2eTest
    runs-on: ubuntu-latest

    steps:
      # chat client repository is checked out
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: chat_client
      # chat server repository is checked out
      - name: Checkout server repo
        uses: actions/checkout@v2
        with:
          repository: stefan-schlagh/chat_server
          path: chat_server
      - name: Create .env file
        env:
          DOCKER_ENV: ${{ secrets.DOCKER_ENV}}
        run: |
          cd ./chat_server/test_templates
          touch docker.env
          printenv DOCKER_ENV > docker.env
      - name: run tests
        run: |
          cd ./chat_client/webdriver
          docker-compose up -d --build
          sleep 10s
          docker-compose exec -T chat-client npm run webdriver
          docker-compose down