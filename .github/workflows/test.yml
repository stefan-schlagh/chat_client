# This is a basic workflow to help you get started with Actions

name: Test

on:
  pull_request:
  
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags' 

jobs:
  test:
    name: test App
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # chat client repository is checked out
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: chat_client
      # chat server repository is checked out
      - name: Checkout server repo
        uses: actions/checkout@v2
        with:
          repository: stefan-schlagh/chat_server
          token: ${{ secrets.CHATSERVER_ACCESS }}
          path: chat_server
      # node.js setup
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      # install dependencies
      - name: npm install
        run: |
          cd ./chat_client
          npm install
          cd ../chat_server
          npm install
      # setup mysql DB
      - name: setup mysql DB
        run: |
          sudo systemctl start mysql.service
          mysql -h 127.0.0.1 -P 3306 -u root "-proot" -e "CREATE DATABASE chat;"
          mysql -h 127.0.0.1 -P 3306 -u root "-proot" "chat" < "./chat_server/sql/chat.sql"
      # create certs, .env
      - name: create certs
        run: |
          cd ./chat_server
          mkdir cert
          cd ./cert
          openssl req  -nodes -new -x509  -keyout key.pem -out cert.pem
          openssl genrsa -out jwtPrivate.pem 1024
          cd ..
          cp ./test_templates/test.env ./.env
      # install forever, start server
      - name: start Server
        run: |
          sudo npm install forever -g
          cd ./chat_server
          forever start app.js
      # install dependencies
      - name: npm test
        run: |
          cd ./chat_client
          npm test
